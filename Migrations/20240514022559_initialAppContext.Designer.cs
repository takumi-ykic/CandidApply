// <auto-generated />
using System;
using CandidApply.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CandidApply.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240514022559_initialAppContext")]
    partial class initialAppContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandidApply.Models.Application", b =>
                {
                    b.Property<int>("applicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("applicationId"));

                    b.Property<DateTime>("applicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("deleteFlag")
                        .HasColumnType("int");

                    b.Property<string>("jobTitle")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("applicationId");

                    b.HasIndex("status");

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("CandidApply.Models.ApplicationFile", b =>
                {
                    b.Property<int>("fileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fileId"));

                    b.Property<int>("applicationId")
                        .HasColumnType("int");

                    b.Property<string>("coverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coverLetterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fileId");

                    b.HasIndex("applicationId")
                        .IsUnique();

                    b.ToTable("ApplicationFile", (string)null);
                });

            modelBuilder.Entity("CandidApply.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statusId"));

                    b.Property<string>("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusId");

                    b.ToTable("ApplicationStatus", (string)null);
                });

            modelBuilder.Entity("CandidApply.Models.Interview", b =>
                {
                    b.Property<int>("interviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("interviewId"));

                    b.Property<int>("applicationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("interviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("location")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("memo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("interviewId");

                    b.HasIndex("applicationId")
                        .IsUnique();

                    b.ToTable("Interview", (string)null);
                });

            modelBuilder.Entity("CandidApply.Models.Application", b =>
                {
                    b.HasOne("CandidApply.Models.ApplicationStatus", "ApplicationStatus")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationStatus");
                });

            modelBuilder.Entity("CandidApply.Models.ApplicationFile", b =>
                {
                    b.HasOne("CandidApply.Models.Application", "Application")
                        .WithOne("ApplicationFile")
                        .HasForeignKey("CandidApply.Models.ApplicationFile", "applicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("CandidApply.Models.Interview", b =>
                {
                    b.HasOne("CandidApply.Models.Application", "Application")
                        .WithOne("Interview")
                        .HasForeignKey("CandidApply.Models.Interview", "applicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("CandidApply.Models.Application", b =>
                {
                    b.Navigation("ApplicationFile");

                    b.Navigation("Interview");
                });
#pragma warning restore 612, 618
        }
    }
}
